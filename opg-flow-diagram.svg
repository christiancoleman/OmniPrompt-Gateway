<svg viewBox="0 0 1400 1600" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#333"/>
    </marker>
    <filter id="shadow">
      <feDropShadow dx="2" dy="2" stdDeviation="2" flood-opacity="0.3"/>
    </filter>
  </defs>
  
  <!-- Title -->
  <text x="700" y="40" font-size="28" font-weight="bold" text-anchor="middle" fill="#2c3e50">OmniPrompt Gateway - Program Flow</text>
  
  <!-- Main Entry Point -->
  <g id="entry">
    <rect x="550" y="80" width="300" height="60" rx="10" fill="#3498db" filter="url(#shadow)"/>
    <text x="700" y="115" text-anchor="middle" fill="white" font-size="16" font-weight="bold">opg.py (Entry Point)</text>
  </g>
  
  <!-- Configuration Layer -->
  <g id="config-layer">
    <rect x="150" y="200" width="250" height="120" rx="10" fill="#e74c3c" filter="url(#shadow)"/>
    <text x="275" y="230" text-anchor="middle" fill="white" font-size="14" font-weight="bold">Configuration</text>
    <text x="275" y="255" text-anchor="middle" fill="white" font-size="12">• load_environment()</text>
    <text x="275" y="275" text-anchor="middle" fill="white" font-size="12">• get_models()</text>
    <text x="275" y="295" text-anchor="middle" fill="white" font-size="12">• validate_model_config()</text>
  </g>
  
  <!-- .env File -->
  <g id="env-file">
    <rect x="50" y="380" width="200" height="100" rx="5" fill="#95a5a6" filter="url(#shadow)"/>
    <text x="150" y="410" text-anchor="middle" fill="white" font-size="14" font-weight="bold">.env File</text>
    <text x="150" y="435" text-anchor="middle" fill="white" font-size="11">• API Keys</text>
    <text x="150" y="455" text-anchor="middle" fill="white" font-size="11">• Model Lists</text>
  </g>
  
  <!-- Model Registry -->
  <g id="model-registry">
    <rect x="300" y="380" width="200" height="100" rx="5" fill="#9b59b6" filter="url(#shadow)"/>
    <text x="400" y="410" text-anchor="middle" fill="white" font-size="14" font-weight="bold">Model Registry</text>
    <text x="400" y="435" text-anchor="middle" fill="white" font-size="11">• OpenAI Models</text>
    <text x="400" y="455" text-anchor="middle" fill="white" font-size="11">• Anthropic Models</text>
    <text x="400" y="475" text-anchor="middle" fill="white" font-size="11">• Local Models</text>
  </g>
  
  <!-- CLI Interface -->
  <g id="cli-interface">
    <rect x="500" y="200" width="400" height="120" rx="10" fill="#2ecc71" filter="url(#shadow)"/>
    <text x="700" y="230" text-anchor="middle" fill="white" font-size="14" font-weight="bold">CLIInterface</text>
    <text x="700" y="255" text-anchor="middle" fill="white" font-size="12">• initialize() - Setup MCP, welcome msg</text>
    <text x="700" y="275" text-anchor="middle" fill="white" font-size="12">• run() - Main command loop</text>
    <text x="700" y="295" text-anchor="middle" fill="white" font-size="12">• _handle_user_message()</text>
  </g>
  
  <!-- MCP Manager -->
  <g id="mcp-manager">
    <rect x="1000" y="200" width="250" height="120" rx="10" fill="#f39c12" filter="url(#shadow)"/>
    <text x="1125" y="230" text-anchor="middle" fill="white" font-size="14" font-weight="bold">MCP Manager</text>
    <text x="1125" y="255" text-anchor="middle" fill="white" font-size="12">• initialize_mcp()</text>
    <text x="1125" y="275" text-anchor="middle" fill="white" font-size="12">• extract_and_execute_tools()</text>
    <text x="1125" y="295" text-anchor="middle" fill="white" font-size="12">• Filesystem access</text>
  </g>
  
  <!-- Command Handler -->
  <g id="command-handler">
    <rect x="550" y="380" width="300" height="180" rx="10" fill="#16a085" filter="url(#shadow)"/>
    <text x="700" y="410" text-anchor="middle" fill="white" font-size="14" font-weight="bold">CommandHandler</text>
    <text x="700" y="435" text-anchor="middle" fill="white" font-size="11">• /help, /models, /new</text>
    <text x="700" y="455" text-anchor="middle" fill="white" font-size="11">• /prompt, /prompt+</text>
    <text x="700" y="475" text-anchor="middle" fill="white" font-size="11">• /changemodels</text>
    <text x="700" y="495" text-anchor="middle" fill="white" font-size="11">• /clear, /history</text>
    <text x="700" y="515" text-anchor="middle" fill="white" font-size="11">• /quit</text>
  </g>
  
  <!-- Core Chat -->
  <g id="core-chat">
    <rect x="500" y="620" width="400" height="140" rx="10" fill="#34495e" filter="url(#shadow)"/>
    <text x="700" y="650" text-anchor="middle" fill="white" font-size="14" font-weight="bold">LLMChat (Core)</text>
    <text x="700" y="675" text-anchor="middle" fill="white" font-size="12">• Conversation management</text>
    <text x="700" y="695" text-anchor="middle" fill="white" font-size="12">• Message history</text>
    <text x="700" y="715" text-anchor="middle" fill="white" font-size="12">• get_response()</text>
    <text x="700" y="735" text-anchor="middle" fill="white" font-size="12">• Model switching</text>
  </g>
  
  <!-- Model Data Structures -->
  <g id="model-structures">
    <rect x="150" y="620" width="250" height="140" rx="10" fill="#8e44ad" filter="url(#shadow)"/>
    <text x="275" y="650" text-anchor="middle" fill="white" font-size="14" font-weight="bold">Data Structures</text>
    <text x="275" y="675" text-anchor="middle" fill="white" font-size="12">• Model</text>
    <text x="275" y="695" text-anchor="middle" fill="white" font-size="12">• Message</text>
    <text x="275" y="715" text-anchor="middle" fill="white" font-size="12">• Conversation</text>
    <text x="275" y="735" text-anchor="middle" fill="white" font-size="12">• Provider</text>
  </g>
  
  <!-- Adapter Layer -->
  <g id="adapter-layer">
    <rect x="350" y="850" width="700" height="80" rx="10" fill="#e67e22" filter="url(#shadow)"/>
    <text x="700" y="880" text-anchor="middle" fill="white" font-size="16" font-weight="bold">Adapter Layer</text>
    <text x="700" y="905" text-anchor="middle" fill="white" font-size="12">Protocol: (model: Model, messages: List[Message]) → str</text>
  </g>
  
  <!-- Individual Adapters -->
  <g id="openai-adapter">
    <rect x="100" y="990" width="200" height="100" rx="10" fill="#3498db" filter="url(#shadow)"/>
    <text x="200" y="1020" text-anchor="middle" fill="white" font-size="14" font-weight="bold">OpenAI Adapter</text>
    <text x="200" y="1045" text-anchor="middle" fill="white" font-size="11">• GPT-3.5/4 API</text>
    <text x="200" y="1065" text-anchor="middle" fill="white" font-size="11">• Chat completions</text>
  </g>
  
  <g id="anthropic-adapter">
    <rect x="350" y="990" width="200" height="100" rx="10" fill="#9b59b6" filter="url(#shadow)"/>
    <text x="450" y="1020" text-anchor="middle" fill="white" font-size="14" font-weight="bold">Anthropic Adapter</text>
    <text x="450" y="1045" text-anchor="middle" fill="white" font-size="11">• Claude API</text>
    <text x="450" y="1065" text-anchor="middle" fill="white" font-size="11">• Messages format</text>
  </g>
  
  <g id="ollama-adapter">
    <rect x="600" y="990" width="200" height="100" rx="10" fill="#16a085" filter="url(#shadow)"/>
    <text x="700" y="1020" text-anchor="middle" fill="white" font-size="14" font-weight="bold">Ollama Adapter</text>
    <text x="700" y="1045" text-anchor="middle" fill="white" font-size="11">• Local models</text>
    <text x="700" y="1065" text-anchor="middle" fill="white" font-size="11">• HTTP endpoint</text>
  </g>
  
  <g id="lmstudio-adapter">
    <rect x="850" y="990" width="200" height="100" rx="10" fill="#2ecc71" filter="url(#shadow)"/>
    <text x="950" y="1020" text-anchor="middle" fill="white" font-size="14" font-weight="bold">LM Studio Adapter</text>
    <text x="950" y="1045" text-anchor="middle" fill="white" font-size="11">• Local models</text>
    <text x="950" y="1065" text-anchor="middle" fill="white" font-size="11">• OpenAI-compatible</text>
  </g>
  
  <!-- External APIs -->
  <g id="external-apis">
    <rect x="350" y="1150" width="700" height="80" rx="10" fill="#c0392b" filter="url(#shadow)"/>
    <text x="700" y="1180" text-anchor="middle" fill="white" font-size="16" font-weight="bold">External APIs / Services</text>
    <text x="700" y="1205" text-anchor="middle" fill="white" font-size="12">OpenAI API | Anthropic API | Local Ollama | Local LM Studio</text>
  </g>
  
  <!-- Rich Terminal -->
  <g id="rich-terminal">
    <rect x="1000" y="620" width="250" height="140" rx="10" fill="#27ae60" filter="url(#shadow)"/>
    <text x="1125" y="650" text-anchor="middle" fill="white" font-size="14" font-weight="bold">Rich Terminal UI</text>
    <text x="1125" y="675" text-anchor="middle" fill="white" font-size="12">• Markdown rendering</text>
    <text x="1125" y="695" text-anchor="middle" fill="white" font-size="12">• Colored output</text>
    <text x="1125" y="715" text-anchor="middle" fill="white" font-size="12">• Tables &amp; panels</text>
    <text x="1125" y="735" text-anchor="middle" fill="white" font-size="12">• Progress indicators</text>
  </g>
  
  <!-- User Input/Output -->
  <g id="user-io">
    <rect x="550" y="1350" width="300" height="80" rx="10" fill="#7f8c8d" filter="url(#shadow)"/>
    <text x="700" y="1380" text-anchor="middle" fill="white" font-size="16" font-weight="bold">User Terminal</text>
    <text x="700" y="1405" text-anchor="middle" fill="white" font-size="12">Input: Commands &amp; Messages</text>
  </g>
  
  <!-- Arrows / Flow -->
  <!-- Entry to Config -->
  <line x1="700" y1="140" x2="350" y2="200" stroke="#333" stroke-width="2" marker-end="url(#arrowhead)"/>
  
  <!-- Entry to CLI -->
  <line x1="700" y1="140" x2="700" y2="200" stroke="#333" stroke-width="2" marker-end="url(#arrowhead)"/>
  
  <!-- Config to env -->
  <line x1="200" y1="320" x2="150" y2="380" stroke="#333" stroke-width="2" marker-end="url(#arrowhead)"/>
  
  <!-- Config to models -->
  <line x1="350" y1="320" x2="400" y2="380" stroke="#333" stroke-width="2" marker-end="url(#arrowhead)"/>
  
  <!-- CLI to MCP -->
  <line x1="900" y1="260" x2="1000" y2="260" stroke="#333" stroke-width="2" marker-end="url(#arrowhead)"/>
  
  <!-- CLI to Command Handler -->
  <line x1="700" y1="320" x2="700" y2="380" stroke="#333" stroke-width="2" marker-end="url(#arrowhead)"/>
  
  <!-- CLI/Commands to Core -->
  <line x1="700" y1="560" x2="700" y2="620" stroke="#333" stroke-width="2" marker-end="url(#arrowhead)"/>
  
  <!-- Core to Model Structures -->
  <line x1="500" y1="690" x2="400" y2="690" stroke="#333" stroke-width="2" marker-end="url(#arrowhead)"/>
  
  <!-- Core to Adapter Layer -->
  <line x1="700" y1="760" x2="700" y2="850" stroke="#333" stroke-width="2" marker-end="url(#arrowhead)"/>
  
  <!-- Adapter Layer to Adapters -->
  <line x1="350" y1="930" x2="200" y2="990" stroke="#333" stroke-width="2" marker-end="url(#arrowhead)"/>
  <line x1="500" y1="930" x2="450" y2="990" stroke="#333" stroke-width="2" marker-end="url(#arrowhead)"/>
  <line x1="700" y1="930" x2="700" y2="990" stroke="#333" stroke-width="2" marker-end="url(#arrowhead)"/>
  <line x1="900" y1="930" x2="950" y2="990" stroke="#333" stroke-width="2" marker-end="url(#arrowhead)"/>
  
  <!-- Adapters to External APIs -->
  <line x1="200" y1="1090" x2="450" y2="1150" stroke="#333" stroke-width="2" marker-end="url(#arrowhead)"/>
  <line x1="450" y1="1090" x2="550" y2="1150" stroke="#333" stroke-width="2" marker-end="url(#arrowhead)"/>
  <line x1="700" y1="1090" x2="700" y2="1150" stroke="#333" stroke-width="2" marker-end="url(#arrowhead)"/>
  <line x1="950" y1="1090" x2="850" y2="1150" stroke="#333" stroke-width="2" marker-end="url(#arrowhead)"/>
  
  <!-- Core to Rich -->
  <line x1="900" y1="690" x2="1000" y2="690" stroke="#333" stroke-width="2" marker-end="url(#arrowhead)"/>
  
  <!-- User I/O connections -->
  <line x1="700" y1="1230" x2="700" y2="1350" stroke="#333" stroke-width="2" marker-end="url(#arrowhead)"/>
  <line x1="700" y1="320" x2="700" y2="380" stroke="#333" stroke-width="2" stroke-dasharray="5,5"/>
  
  <!-- Add flow descriptions -->
  <text x="100" y="1300" font-size="14" font-weight="bold" fill="#2c3e50">Main Flow:</text>
  <text x="100" y="1325" font-size="12" fill="#34495e">1. Load configuration from .env</text>
  <text x="100" y="1345" font-size="12" fill="#34495e">2. Initialize CLI with available models</text>
  <text x="100" y="1365" font-size="12" fill="#34495e">3. Enter main loop: wait for user input</text>
  <text x="100" y="1385" font-size="12" fill="#34495e">4. Route to command handler or LLM</text>
  <text x="100" y="1405" font-size="12" fill="#34495e">5. Process through adapter to API</text>
  <text x="100" y="1425" font-size="12" fill="#34495e">6. Display formatted response</text>
  
  <text x="100" y="1475" font-size="14" font-weight="bold" fill="#2c3e50">Key Features:</text>
  <text x="100" y="1500" font-size="12" fill="#34495e">• Provider-agnostic design</text>
  <text x="100" y="1520" font-size="12" fill="#34495e">• Runtime model switching</text>
  <text x="100" y="1540" font-size="12" fill="#34495e">• MCP filesystem tools</text>
  <text x="100" y="1560" font-size="12" fill="#34495e">• Rich terminal formatting</text>
</svg>